#include "GLSLProgram.hpp"

GLint GetUniformLocation(GLuint shaderProgramID, const GLchar* name) {
	GLint result = glGetUniformLocation(shaderProgramID, name);
	if (result == -1) LOG_ERROR(name << " is not a valid uniform variable!");
	else if (result == GL_INVALID_INDEX) LOG_ERROR(name << " is not a uniform variable(may have been optimized out by GLSL");
	else if (result == GL_INVALID_VALUE) LOG_ERROR("GPU_Program was not a value generated by OpenGL when trying to get location of uniform" << name);
	else if (result == GL_INVALID_OPERATION) LOG_ERROR("Invalid shader program provided when getting location of uniform " << name);
	return result;
}